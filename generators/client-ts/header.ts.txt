let http: any;
let https: any;

const axios = require('axios');

import { isNode } from 'browser-or-node';
import { AxiosInstance, CreateAxiosDefaults, AxiosResponse } from 'axios';
import { Operation, ResponseByStatus, HttpSuccessStatusCodes, ResponseCodesByOperationId } from './mapper';
import { addInterceptor } from './axios.config';

if (isNode()) {
    http = require('http');
    https = require('https');
}

export class SDK {
    private axiosInstance: AxiosInstance;

    constructor(config: {
        baseURL: string,
        timeout?: number,
        headers?: Record<string, string>,
    }) {
        const axiosConfig: CreateAxiosDefaults = {
            baseURL: config.baseURL,
            timeout: config.timeout,
            headers: config.headers,
        };

        if (isNode()) {
            axiosConfig.httpAgent = new http.Agent({ keepAlive: true })
            axiosConfig.httpsAgent = new https.Agent({ keepAlive: true })
        }

        this.axiosInstance = axios.create(axiosConfig);

        addInterceptor(this.axiosInstance);
    }

